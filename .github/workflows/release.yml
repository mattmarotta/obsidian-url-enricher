name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build plugin
        run: npm run build

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create release archive
        run: |
          mkdir release
          cp main.js manifest.json styles.css release/
          cd release
          zip -r ../obsidian-inline-link-preview-${{ steps.get_version.outputs.VERSION }}.zip .

      - name: Extract release notes from CHANGELOG
        id: changelog
        run: |
          VERSION="${{ steps.get_version.outputs.VERSION }}"
          
          # Extract the section for this version from CHANGELOG.md
          # This captures everything between ## [VERSION] and the next ## [
          NOTES=$(awk -v ver="$VERSION" '
            /^## \[/ {
              if (found) exit
              if ($0 ~ "## \\[" ver "\\]") found=1
              next
            }
            found { print }
          ' CHANGELOG.md)
          
          if [ -z "$NOTES" ]; then
            echo "⚠️ No changelog entry found for version $VERSION"
            NOTES="No changelog entry found. See [CHANGELOG.md](CHANGELOG.md) for details."
          fi
          
          # Save to output (handle multiline)
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          # Get previous tag for comparison link
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          echo "PREVIOUS_TAG=$PREVIOUS_TAG" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: ${{ steps.get_version.outputs.VERSION }}
          body: |
            ${{ steps.changelog.outputs.CHANGELOG }}
            
            ---
            
            ## Installation
            
            1. Download `obsidian-inline-link-preview-${{ steps.get_version.outputs.VERSION }}.zip`
            2. Extract the files to your vault's `.obsidian/plugins/obsidian-inline-link-preview/` directory
            3. Reload Obsidian
            4. Enable the plugin in Settings > Community Plugins
            
            ## Files
            
            - `main.js` - Plugin code
            - `manifest.json` - Plugin manifest
            - `styles.css` - Plugin styles
            
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.changelog.outputs.PREVIOUS_TAG }}...${{ steps.get_version.outputs.VERSION }}
          files: |
            obsidian-inline-link-preview-${{ steps.get_version.outputs.VERSION }}.zip
            main.js
            manifest.json
            styles.css
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
